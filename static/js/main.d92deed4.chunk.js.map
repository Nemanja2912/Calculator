{"version":3,"sources":["App.js","components/Screen.jsx","components/Button.jsx","components/Body.jsx","serviceWorker.js","index.js"],"names":["App","state","height","window","innerHeight","display","preview","operation","size","highOperation","memory","handlePrint","n","length","setState","slice","s","eval","handleAdd","handleSubstraction","handleDivision","handleMultiplication","handleDisplay","String","Number","toExponential","style","this","className","Component","Screen","props","replaceAll","Button","classButton","span","onClick","handleFunc","button","Body","advanceClass","advanceBodyClass","handleAdvance","advanceOpen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d92deed4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Screen from \"./components/Screen\";\r\nimport Body from \"./components/Body\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    height: window.innerHeight,\r\n    display: \"\",\r\n    preview: \"\",\r\n    operation: false,\r\n    size: 9,\r\n    highOperation: false,\r\n    memory: \"\",\r\n  };\r\n\r\n  handlePrint = (n) => {\r\n    let { display, operation, size, preview } = this.state;\r\n\r\n    if (!operation && display.length >= size) return null;\r\n\r\n    this.setState({\r\n      display: operation || display === \"0\" ? n : display + n,\r\n      preview:\r\n        display[0] === \"0\" ? preview.slice(0, -1) + ` ${n}` : preview + n,\r\n      operation: false,\r\n    });\r\n  };\r\n\r\n  operation = (s) => {\r\n    let { preview, operation, display, highOperation, memory } = this.state;\r\n\r\n    if (display === \"\") preview = 0;\r\n\r\n    if (operation) preview = preview.slice(0, -2);\r\n\r\n    this.setState({\r\n      operation: true,\r\n      preview: preview + ` ${s} `,\r\n    });\r\n\r\n    if (s === \"*\" || s === \"/\") {\r\n      this.setState({\r\n        highOperation: true,\r\n        memory:\r\n          memory === \"\"\r\n            ? display\r\n            : operation\r\n            ? memory\r\n            : eval(memory + s + display),\r\n        display:\r\n          memory === \"\"\r\n            ? display\r\n            : operation\r\n            ? memory\r\n            : eval(memory + s + display),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        memory: \"\",\r\n        highOperation: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleAdd = () => {\r\n    this.operation(\"+\");\r\n  };\r\n\r\n  handleSubstraction = () => {\r\n    this.operation(\"-\");\r\n  };\r\n\r\n  handleDivision = () => {\r\n    this.operation(\"/\");\r\n  };\r\n\r\n  handleMultiplication = () => {\r\n    this.operation(\"*\");\r\n  };\r\n\r\n  handleDisplay = () => {\r\n    let { display, size, operation, preview, highOperation } = this.state;\r\n\r\n    if (display.length > 99) return \"error\";\r\n\r\n    if (operation && !highOperation)\r\n      display = String(eval(preview.slice(0, -2)));\r\n\r\n    if (highOperation) display = String(display);\r\n\r\n    return display.length > size ? Number(display).toExponential(5) : display;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ height: this.state.height }} className=\"app\">\r\n        <Screen display={this.handleDisplay()} preview={this.state.preview} />\r\n        <Body\r\n          handlePrint={this.handlePrint}\r\n          handleAdd={this.handleAdd}\r\n          handleSubstraction={this.handleSubstraction}\r\n          handleMultiplication={this.handleMultiplication}\r\n          handleDivision={this.handleDivision}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Screen extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"screen\">\r\n        <div className=\"display\">\r\n          {this.props.display ? this.props.display : 0}\r\n        </div>\r\n        <div className=\"preview\">\r\n          <p>{this.props.preview.replaceAll(\"/\", \"รท\").replaceAll(\"*\", \"ร\")}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Screen;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Button extends Component {\r\n  state = {\r\n    classButton:\r\n      this.props.operation === \"true\"\r\n        ? \"button operation\"\r\n        : this.props.span === \"true\"\r\n        ? \"button span2\"\r\n        : \"button\",\r\n  };\r\n  render() {\r\n    return (\r\n      <p\r\n        onClick={() => this.props.handleFunc(this.props.button)}\r\n        className={this.state.classButton}\r\n      >\r\n        {this.props.button === \"/\" ? (\r\n          <span>&#247;</span>\r\n        ) : this.props.button === \"*\" ? (\r\n          <span>&#215;</span>\r\n        ) : (\r\n          this.props.button\r\n        )}\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nclass Body extends Component {\r\n  state = {\r\n    advanceClass: \"advance\",\r\n    advanceBodyClass: \"advance-body\",\r\n    n: 0,\r\n  };\r\n\r\n  handleAdvance = () => {\r\n    let advanceOpen = this.state.advanceClass !== \"advance\";\r\n\r\n    this.setState({\r\n      advanceClass: advanceOpen ? \"advance\" : \"advance advance-open\",\r\n      advanceBodyClass: advanceOpen\r\n        ? \"advance-body\"\r\n        : \"advance-body advance-body-open\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handlePrint,\r\n      handleAdd,\r\n      handleSubstraction,\r\n      handleDivision,\r\n      handleMultiplication,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"calc-body\">\r\n        <div className=\"number\">\r\n          <Button\r\n            handleFunc={handlePrint}\r\n            operation=\"true\"\r\n            button=\"AC\"\r\n          ></Button>\r\n          <Button\r\n            handleFunc={handlePrint}\r\n            operation=\"true\"\r\n            button=\"+/-\"\r\n          ></Button>\r\n          <Button handleFunc={handlePrint} operation=\"true\" button=\"%\"></Button>\r\n          <Button\r\n            handleFunc={handleDivision}\r\n            operation=\"true\"\r\n            button=\"/\"\r\n          ></Button>\r\n          <Button handleFunc={handlePrint} button=\"7\"></Button>\r\n          <Button handleFunc={handlePrint} button=\"8\"></Button>\r\n          <Button handleFunc={handlePrint} button=\"9\"></Button>\r\n          <Button\r\n            handleFunc={handleMultiplication}\r\n            operation=\"true\"\r\n            button=\"*\"\r\n          ></Button>\r\n          <Button handleFunc={handlePrint} button=\"4\"></Button>\r\n          <Button handleFunc={handlePrint} button=\"5\"></Button>\r\n          <Button handleFunc={handlePrint} button=\"6\"></Button>\r\n          <Button\r\n            handleFunc={handleSubstraction}\r\n            operation=\"true\"\r\n            button=\"-\"\r\n          ></Button>\r\n          <Button handleFunc={handlePrint} button=\"1\"></Button>\r\n          <Button handleFunc={handlePrint} button=\"2\"></Button>\r\n          <Button handleFunc={handlePrint} button=\"3\"></Button>\r\n          <Button handleFunc={handleAdd} operation=\"true\" button=\"+\"></Button>\r\n          <Button handleFunc={handlePrint} span=\"true\" button=\"0\"></Button>\r\n\r\n          <Button handleFunc={handlePrint} button=\".\"></Button>\r\n          <Button button=\"=\" operation=\"true\"></Button>\r\n        </div>\r\n        <div className={this.state.advanceClass}>\r\n          <p onClick={this.handleAdvance}>&#x2039;</p>\r\n        </div>\r\n        <div className={this.state.advanceBodyClass}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}