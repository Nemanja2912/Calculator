{"version":3,"sources":["App.js","components/Screen.jsx","components/Body.jsx","components/History.jsx","serviceWorker.js","index.js"],"names":["App","state","height","window","innerHeight","num","prevNum","operation","preview","error","equal","handlePrintNumber","e","length","target","innerHTML","currentNum","number","setState","comma","handleOperationAction","action","pop","result","eval","join","isNaN","isFinite","handleOtherAction","handleDelete","deleteLast","style","this","className","reset","Component","Screen","props","String","Number","toExponential","replaceAll","onClick","Body","History","display","hide","handleHide","history","map","h","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.99af3141.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Screen from \"./components/Screen\";\r\nimport Body from \"./components/Body\";\r\nimport History from \"./components/History\";\r\n\r\nclass App extends Component {\r\n  // State\r\n  state = {\r\n    height: window.innerHeight,\r\n    num: \"\",\r\n    prevNum: \"\",\r\n    operation: false,\r\n    preview: [0],\r\n    error: false,\r\n    equal: false,\r\n  };\r\n\r\n  // Number click\r\n\r\n  handlePrintNumber = (e) => {\r\n    const { num, operation, preview, equal } = this.state;\r\n\r\n    if (num.length > 7) return;\r\n\r\n    if (num === \"\" && e.target.innerHTML === \"0\") return;\r\n\r\n    const currentNum = e.target.innerHTML;\r\n\r\n    let number = operation || equal ? currentNum : num + currentNum;\r\n\r\n    if (operation) {\r\n      preview[preview.length] = currentNum;\r\n    } else if (equal) {\r\n      preview[preview.length - 1] = [currentNum];\r\n    } else {\r\n      preview[preview.length - 1] = num + currentNum;\r\n    }\r\n\r\n    this.setState({\r\n      num: number,\r\n      operation: false,\r\n      preview: preview,\r\n      comma: false,\r\n      equal: false,\r\n    });\r\n  };\r\n\r\n  // Operation action\r\n  handleOperationAction = (action) => {\r\n    const { operation, preview } = this.state;\r\n\r\n    if (operation) preview.pop();\r\n\r\n    let result = eval(preview.join(\"\"));\r\n\r\n    if (isNaN(result) || !isFinite(result)) {\r\n      result = \"Error\";\r\n\r\n      this.setState({\r\n        error: true,\r\n      });\r\n    }\r\n\r\n    if (action === \"addition\") {\r\n      preview[preview.length] = \" + \";\r\n    }\r\n\r\n    if (action === \"subtraction\") {\r\n      preview[preview.length] = \" - \";\r\n    }\r\n\r\n    if (action === \"multiplication\") {\r\n      preview[preview.length] = \" * \";\r\n    }\r\n\r\n    if (action === \"division\") {\r\n      preview[preview.length] = \" / \";\r\n    }\r\n\r\n    this.setState({\r\n      prevNum: result,\r\n      num: result,\r\n      operation: true,\r\n      preview: preview,\r\n      comma: false,\r\n      equal: false,\r\n    });\r\n\r\n    if (action === \"equal\") {\r\n      this.setState({\r\n        prevNum: result,\r\n        num: result,\r\n        operation: false,\r\n        comma: false,\r\n        equal: true,\r\n        preview: [result],\r\n      });\r\n    }\r\n  };\r\n\r\n  // Other button\r\n\r\n  handleOtherAction = (action) => {\r\n    const { preview, num, operation, comma } = this.state;\r\n\r\n    if (action === \"reset\") {\r\n      this.setState({\r\n        num: \"\",\r\n        prevNum: \"\",\r\n        operation: false,\r\n        preview: [0],\r\n        comma: false,\r\n        equal: false,\r\n      });\r\n    }\r\n\r\n    if (action === \"sign\") {\r\n      if (operation) return;\r\n\r\n      preview[preview.length - 1] = preview[preview.length - 1] * -1;\r\n\r\n      this.setState({\r\n        num: num * -1,\r\n        preview: preview,\r\n        equal: false,\r\n      });\r\n    }\r\n\r\n    if (action === \"comma\") {\r\n      if (operation) return;\r\n      if (comma) return;\r\n\r\n      preview[preview.length - 1] = preview[preview.length - 1] + \".\";\r\n\r\n      this.setState({\r\n        preview: preview,\r\n        num: num === \"\" ? \"0.\" : num + \".\",\r\n        comma: true,\r\n        equal: false,\r\n      });\r\n    }\r\n\r\n    if (action === \"percent\") {\r\n      if (operation) return;\r\n\r\n      preview[preview.length - 1] = preview[preview.length - 1] / 100;\r\n\r\n      this.setState({\r\n        num: num / 100,\r\n        preview: preview,\r\n        equal: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Delete from Array\r\n\r\n  handleDelete = () => {\r\n    let deleteLast = [...this.state.preview];\r\n    deleteLast.pop();\r\n\r\n    this.setState({\r\n      preview: deleteLast.length === 0 ? [0] : deleteLast,\r\n      num: \"\",\r\n      operation:\r\n        isNaN(deleteLast[deleteLast.length - 1]) && deleteLast.length > 0\r\n          ? true\r\n          : false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ height: this.state.height }} className=\"app\">\r\n        <Screen\r\n          num={this.state.num}\r\n          preview={this.state.preview}\r\n          handleDelete={this.handleDelete}\r\n        />\r\n        <Body\r\n          reset={this.state.reset}\r\n          handleOperationAction={this.handleOperationAction}\r\n          handlePrintNumber={this.handlePrintNumber}\r\n          handleOtherAction={this.handleOtherAction}\r\n        />\r\n        {/* <History /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Screen extends Component {\r\n  state = {};\r\n  render() {\r\n    const { num, preview, handleDelete } = this.props;\r\n    return (\r\n      <div className=\"screen\">\r\n        <div className=\"display\">\r\n          {num === \"\"\r\n            ? 0\r\n            : String(num).length > 7\r\n            ? Number(num).toExponential(4)\r\n            : num}\r\n        </div>\r\n        <div className=\"preview\">\r\n          <p className=\"num-prev\">\r\n            {preview.join(\" \").replaceAll(\"/\", \"÷\").replaceAll(\"*\", \"×\")}\r\n          </p>\r\n          <p onClick={() => handleDelete()} className=\"delete\">\r\n            <i className=\"fas fa-backspace\"></i>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Screen;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Body extends Component {\r\n  render() {\r\n    const {\r\n      handlePrintNumber,\r\n      handleOperationAction,\r\n      handleOtherAction,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"calc-body\">\r\n        <div className=\"number\">\r\n          <p\r\n            onClick={() => handleOtherAction(\"reset\")}\r\n            className=\"button operation reset\"\r\n          >\r\n            AC\r\n          </p>\r\n          <p\r\n            onClick={() => handleOtherAction(\"sign\")}\r\n            className=\"button operation\"\r\n          >\r\n            +/-\r\n          </p>\r\n          <p\r\n            onClick={() => handleOtherAction(\"percent\")}\r\n            className=\"button operation\"\r\n          >\r\n            %\r\n          </p>\r\n          <p\r\n            onClick={() => handleOperationAction(\"division\")}\r\n            className=\"button operation special\"\r\n          >\r\n            <span>&#247;</span>\r\n          </p>\r\n          <p onClick={(e) => handlePrintNumber(e)} className=\"button\">\r\n            7\r\n          </p>\r\n          <p onClick={(e) => handlePrintNumber(e)} className=\"button\">\r\n            8\r\n          </p>\r\n          <p onClick={(e) => handlePrintNumber(e)} className=\"button\">\r\n            9\r\n          </p>\r\n          <p\r\n            onClick={() => handleOperationAction(\"multiplication\")}\r\n            className=\"button operation special\"\r\n          >\r\n            <span>&#215;</span>\r\n          </p>\r\n          <p onClick={(e) => handlePrintNumber(e)} className=\"button\">\r\n            4\r\n          </p>\r\n          <p onClick={(e) => handlePrintNumber(e)} className=\"button\">\r\n            5\r\n          </p>\r\n          <p onClick={(e) => handlePrintNumber(e)} className=\"button\">\r\n            6\r\n          </p>\r\n          <p\r\n            onClick={() => handleOperationAction(\"subtraction\")}\r\n            className=\"button operation special\"\r\n          >\r\n            -\r\n          </p>\r\n          <p onClick={(e) => handlePrintNumber(e)} className=\"button\">\r\n            1\r\n          </p>\r\n          <p onClick={(e) => handlePrintNumber(e)} className=\"button\">\r\n            2\r\n          </p>\r\n          <p onClick={(e) => handlePrintNumber(e)} className=\"button\">\r\n            3\r\n          </p>\r\n          <p\r\n            onClick={() => handleOperationAction(\"addition\")}\r\n            className=\"button operation special\"\r\n          >\r\n            +\r\n          </p>\r\n          <p onClick={(e) => handlePrintNumber(e)} className=\"span2 button\">\r\n            0\r\n          </p>\r\n          <p onClick={() => handleOtherAction(\"comma\")} className=\"button\">\r\n            .\r\n          </p>\r\n          <p\r\n            onClick={() => handleOperationAction(\"equal\")}\r\n            className=\"button  equal\"\r\n          >\r\n            =\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React, { Component } from \"react\";\r\n\r\nclass History extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ display: this.props.hide ? \"none\" : \"flex\" }}\r\n        className=\"history\"\r\n      >\r\n        <p className=\"close\" onClick={this.props.handleHide}>\r\n          x\r\n        </p>\r\n        {this.props.history.map((h) => (\r\n          <p>\r\n            {h} <br />= {eval(h)}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default History;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}